name: OCaml CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
        ocaml-compiler: [ '4.14' ]
        task: [ 'Task14', 'Task16' ]
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up OCaml ${{ matrix.ocaml-compiler }}
      uses: ocaml/setup-ocaml@v2
      with:
        ocaml-compiler: ${{ matrix.ocaml-compiler }}

    - name: Install dependencies
      # Устанавливаем зависимости для конкретного задания
      run: opam install . --deps-only --with-test
      working-directory: ./Lab1/${{ matrix.task }}

    - name: Check formatting
      # Проверяем, что код отформатирован с помощью ocamlformat
      run: opam exec -- dune fmt --check
      working-directory: ./Lab1/${{ matrix.task }}

    - name: Build project
      # Собираем проект с помощью dune
      run: opam exec -- dune build
      working-directory: ./Lab1/${{ matrix.task }}

    - name: Run tests
      # Запускаем тесты с помощью dune
      run: opam exec -- dune runtest
      working-directory: ./Lab1/${{ matrix.task }}

    - name: Generate documentation
      # Генерируем документацию
      run: opam exec -- dune build @doc
      working-directory: ./Lab1/${{ matrix.task }}